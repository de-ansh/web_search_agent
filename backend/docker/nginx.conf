events {
    worker_connections 1024;
}

http {
    upstream rag-api {
        server rag-agent:8000;
    }

    upstream chromadb-api {
        server chromadb:8000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=chromadb:10m rate=5r/s;

    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # RAG API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://rag-api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }

        # ChromaDB endpoints (admin access)
        location /chromadb/ {
            limit_req zone=chromadb burst=10 nodelay;
            proxy_pass http://chromadb-api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Restrict access (optional)
            # allow 192.168.1.0/24;
            # deny all;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://rag-api/health;
            access_log off;
        }

        # Static files (if any)
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}